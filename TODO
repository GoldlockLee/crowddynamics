Hahmottelen nyt tähän sitä mitä haluttaisiin Harrin kanssa, että syntyis elokuun loppuun mennessä:

1a. Jos vain onnistuu, ellipsimallin ymppääminen nopeusriippuvaiseen sosiaalisen voiman malliin (jos tuntuu liian hankalalta, tähän ei kantsi käyttää nyt kesällä liikaa aikaa, vaan ajetaan vaan seuraavien kohtien simulaatiot ympyrämallilla)
1b. Jos ellipsimallin ymppääminen onnistuu, voisit tehdä nopean kirjallisuuskatsauksen (lähinnä selaamalla Langstonin paperin ja Power law paperin viittaukset) onko kukaan aikasemmin tehnyt tätä
2. Saada koodi tuottamaan staattisia pelitasapainokuvat (samantyyliset kuin Heliövaara et al., 2013, Physical Review E)
3. Mahdollisuus tutkia aikaintervalleja huoneista evakuoitujen agenttien välillä, eri T_{ASET} arvoilla => voitaisiin tutkia miten eri peliparametrin T_{ASET} arvot vaikuttavat näiden aikaintervallien jakaumaan. Riittää vaan, että koodi puljauttaa esim. sellaisen datan ulos, että millä ajanhetkillä agentit ovat poistuneet. Mä voin tehä analyysit tällä datalle syksymällä.
4. Vikoina päivinä voisit tutustuttaa mut koodeihin, niin voisin itsekin hyödyntää koodeja syksyllä
5. Loppukesästä/syksyllä kaikki kesätyöntekijät pitää lyhkäsen esitelmän aikaansaannoksistaan. Eli pitäisi koota lyhkänen powerpoint-esitys. Voi olla, että Harrilla on jotain sanottavaa miten tämä kuuluu tehdä.


# Resources
https://pymotw.com/2/multiprocessing/communication.html

# Documentation
TODO: Video Tutorial !!!
TODO: Truncated normal distribution
TODO: Bokeh plots
TODO: Fundamental diagram

# General
TODO: Command line arguments
TODO: JIT Compilation
TODO: Executable

# Simulation
TODO: Load simulation data
TODO: Start/end time, simulation length
TODO: Bytes saved, Memory consumption
TODO: CAD integration
TODO: pyqtgraph exporter
TODO: Spatial game improvements

# Structures
TODO: Curves; Linear, Bezier, Radial
TODO: Areas: Polygon, Circle,
TODO: Agent maximum velocity for optimizations

# Egress Game
TODO: Unidirectional narrow bottleneck capacity estimation

# Graphical user interface
TODO: MoviePy
TODO: Density & Navigation Visualization
TODO: Frames per second

# Package/Module
TODO: Python Packaging
TODO: Software Versioning
TODO: Conda package

# Continuous integration
TODO: Circle-CI, Travis-CI, Appveyor ?

